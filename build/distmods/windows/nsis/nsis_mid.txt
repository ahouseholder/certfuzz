CreateDirectory "$INSTDIR\symbols"
CreateDirectory "$INSTDIR\log"
CreateDirectory "$INSTDIR\results"
CreateDirectory "$INSTDIR\fuzzdir"
    
#Messagebox MB_OK "WIN64: $WIN64$\nThis is a new line"

${If} $WIN64 == 1
    # 64-bit Windows
    StrCpy $DEBUGGER "dbg_amd64_6.11.1.404.msi"
    StrCpy $DEBUGDIR "C:\Program Files\Debugging Tools for Windows (x64)"
${Else}
    # 32-bit Windows
    StrCpy $DEBUGGER "dbg_x86_6.11.1.404.msi"
    StrCpy $DEBUGDIR "C:\Program Files\Debugging Tools for Windows (x86)"
${EndIf}


ReadRegStr $PYTHON27_DIR HKLM SOFTWARE\Python\PythonCore\2.7\InstallPath ""
${If} $PYTHON27_DIR == ""
  StrCpy $NEED_PYTHON 1
  StrCpy $NEED_NUMPY 1
  StrCpy $NEED_SCIPY 1
  StrCpy $NEED_PYYAML 1
  StrCpy $NEED_PYWIN32 1
  StrCpy $NEED_WMI 1
${Else}
  IfFileExists "$PYTHON27_DIR\Removenumpy.exe" +2
    StrCpy $NEED_NUMPY 1
  IfFileExists "$PYTHON27_DIR\Removescipy.exe" +2
    StrCpy $NEED_SCIPY 1
  IfFileExists "$PYTHON27_DIR\RemovePyYAML.exe" +2
    StrCpy $NEED_PYYAML 1  
  IfFileExists "$PYTHON27_DIR\Removepywin32.exe" +2
    StrCpy $NEED_PYWIN32 1  
  IfFileExists "$PYTHON27_DIR\RemoveWMI.exe" +2
    StrCpy $NEED_WMI 1  
${EndIf}

IfFileExists "$DEBUGDIR\cdb.exe" +2
  StrCpy $NEED_DEBUGGER 1

${If} $WIN64 == 1
    # 64-bit Windows
    ReadRegDWORD $VC2010_INSTALLED HKLM SOFTWARE\Microsoft\VisualStudio\10.0\VC\VCRedist\x64 Installed
    StrCpy $VCR "vcredist_x64"
${Else}
    # 32-bit Windows
    ReadRegDWORD $VC2010_INSTALLED HKLM SOFTWARE\Microsoft\VisualStudio\10.0\VC\VCRedist\x86 Installed
    StrCpy $VCR "vcredist_x86"
${EndIf}

${IfNot} $VC2010_INSTALLED == "1"
    StrCpy $NEED_VC2010 1
${EndIf}

${If} $NEED_PYTHON == 1
    StrCpy $DEPS "$DEPS * Python 2.7$\n"
    StrCpy $DEP_MISSING 1
${EndIf}
${If} $NEED_NUMPY == 1
    StrCpy $DEPS "$DEPS * Python Numpy$\n"
    StrCpy $DEP_MISSING 1
${EndIf}
${If} $NEED_SCIPY == 1
    StrCpy $DEPS "$DEPS * Python Scipy$\n"
    StrCpy $DEP_MISSING 1
${EndIf}
${If} $NEED_PYYAML == 1
    StrCpy $DEPS "$DEPS * PyYAML$\n"
    StrCpy $DEP_MISSING 1
${EndIf}
${If} $NEED_PYWIN32 == 1
    StrCpy $DEPS "$DEPS * pywin32$\n"
    StrCpy $DEP_MISSING 1
${EndIf}
${If} $NEED_WMI == 1
    StrCpy $DEPS "$DEPS * Python WMI$\n"
    StrCpy $DEP_MISSING 1
${EndIf}
${If} $NEED_DEBUGGER == 1
    StrCpy $DEPS "$DEPS * Windows Debugging Tools$\n"
    StrCpy $DEP_MISSING 1
${EndIf}
${If} $NEED_VC2010 == 1
    StrCpy $DEPS "$DEPS * Microsoft Visual C++ 2010 Runtime$\n"
    StrCpy $DEP_MISSING 1
${EndIf}

${If} $DEP_MISSING == 1
    IfFileExists "$INSTALLERDIR\deps\python-2.7.12.msi" 0 depMissing
    IfFileExists "$INSTALLERDIR\deps\scipy-0.16.1-win32-superpack-python2.7.exe" 0 depMissing
    IfFileExists "$INSTALLERDIR\deps\numpy-1.10.2-win32-superpack-python2.7.exe" 0 depMissing
    IfFileExists "$INSTALLERDIR\deps\PyYAML-3.11.win32-py2.7.exe" 0 depMissing
    IfFileExists "$INSTALLERDIR\deps\pywin32-220.win32-py2.7.exe" 0 depMissing
    IfFileExists "$INSTALLERDIR\deps\WMI-1.4.9.win32.exe" 0 depMissing
    IfFileExists "$INSTALLERDIR\deps\$VCR.exe" 0 depMissing
    IfFileExists "$INSTALLERDIR\deps\$DEBUGGER" 0 depMissing
    
    MessageBox MB_YESNO "The following requirements were not detected:$\n$DEPS$\nOK to install fom the deps directory?" /SD IDYES IDNO skipDeps
        StrCpy $DEPS_OK 1
        Goto skipDeps
    
    depMissing:
    MessageBox MB_YESNO "The following requirements were not detected:$\n$DEPS$\nDownload from www.cert.org and install?" /SD IDYES IDNO skipDeps
        StrCpy $DOWNLOAD_OK 1
${EndIf}

skipDeps:


${If} $NEED_PYTHON == 1
    IfFileExists "$INSTALLERDIR\deps\python-2.7.12.msi" localPythonInstall
    ${If} $DOWNLOAD_OK == 1   
    
      inetc::get "https://www.cert.org/downloads/foe/python-2.7.12.msi" "$TEMP\python-2.7.12.msi"
      Pop $0
      ${If} $0 == "OK"
        ExecWait '"msiexec.exe" /i "$TEMP\python-2.7.12.msi" /qb ALLUSERS=1'
        Delete "$TEMP\python-2.7.12.msi"
        ${Else}
            MessageBox MB_YESNO|MB_ICONEXCLAMATION "Python download failed. Retry?" /SD IDNO IDYES skipDeps
        ${EndIf}
    ${EndIf}
    Goto skipPython
    
    localPythonInstall:
    ${If} $DEPS_OK == 1
        ExecWait '"msiexec.exe" /i "$INSTALLERDIR\deps\python-2.7.12.msi" /qb ALLUSERS=1'
    ${EndIf}
${EndIf}

ReadRegStr $PYTHON27_DIR HKLM SOFTWARE\Python\PythonCore\2.7\InstallPath ""

ReadRegStr $DEFAULT_PYTHON HKCR "Python.File\shell\open\command" ""
#Messagebox MB_OK "DEFAULT_PYTHON: $DEFAULT_PYTHON"
${StrStr} $0 $DEFAULT_PYTHON $PYTHON27_DIR
${If} $0 == ""
    # Python 2.7 is not the default
    MessageBox MB_YESNO "Python 2.7 is not the default Python interpreter. Set 2.7 as the default?" /SD IDYES IDNO skipPython
    WriteRegStr HKCR "Python.File\shell\open\command" "" '"$PYTHON27_DIRpython.exe" "%1" %*'
${EndIf}

skipPython:
${If} $NEED_SCIPY == 1
    IfFileExists "$INSTALLERDIR\deps\scipy-0.16.1-win32-superpack-python2.7.exe" localScipyInstall
    ${If} $DOWNLOAD_OK == 1     
        inetc::get "https://www.cert.org/downloads/foe/scipy-0.16.1-win32-superpack-python2.7.bin" "$TEMP\scipy-0.16.1-win32-superpack-python2.7.exe"
      Pop $0
      ${If} $0 == "OK"
        ExecWait "$TEMP\scipy-0.16.1-win32-superpack-python2.7.exe"
        Delete "$TEMP\scipy-0.16.1-win32-superpack-python2.7.exe"
        ${Else}
            MessageBox MB_YESNO|MB_ICONEXCLAMATION "Scipy download failed. Retry?" /SD IDNO IDYES skipPython
        ${EndIf}
    ${EndIf}
    Goto ScipyInstalled
        
    localScipyInstall:
    ${If} $DEPS_OK == 1
        ExecWait "$INSTALLERDIR\deps\scipy-0.16.1-win32-superpack-python2.7.exe"
    ${EndIf}
${EndIf}

ScipyInstalled:
${If} $NEED_NUMPY == 1
    IfFileExists "$INSTALLERDIR\deps\numpy-1.10.2-win32-superpack-python2.7.exe" localNumpyInstall
    ${If} $DOWNLOAD_OK == 1
      inetc::get "https://www.cert.org/downloads/foe/numpy-1.10.2-win32-superpack-python2.7.bin" "$TEMP\numpy-1.10.2-win32-superpack-python2.7.exe"
      Pop $0
      ${If} $0 == "OK"
        ExecWait "$TEMP\numpy-1.10.2-win32-superpack-python2.7.exe"
        Delete "$TEMP\numpy-1.10.2-win32-superpack-python2.7.exe"
        ${Else}
            MessageBox MB_YESNO|MB_ICONEXCLAMATION "Numpy download failed. Retry?" /SD IDNO IDYES ScipyInstalled
        ${EndIf}
    ${EndIf} 
    Goto NumpyInstalled

    localNumpyInstall:
    ${If} $DEPS_OK == 1
        ExecWait "$INSTALLERDIR\deps\numpy-1.10.2-win32-superpack-python2.7.exe"
    ${EndIf}
${EndIf}

NumpyInstalled:
${If} $NEED_PYYAML == 1
    IfFileExists "$INSTALLERDIR\deps\PyYAML-3.11.win32-py2.7.exe" localPyYAMLInstall
    ${If} $DOWNLOAD_OK == 1
      inetc::get "https://www.cert.org/downloads/foe/PyYAML-3.11.win32-py2.7.bin" "$TEMP\PyYAML-3.11.win32-py2.7.exe"
      Pop $0
      ${If} $0 == "OK"
        ExecWait "$TEMP\PyYAML-3.11.win32-py2.7.exe"
        Delete "$TEMP\PyYAML-3.11.win32-py2.7.exe"
        ${Else}
            MessageBox MB_YESNO|MB_ICONEXCLAMATION "PyYAML download failed. Retry?" /SD IDNO IDYES NumpyInstalled
        ${EndIf} 
    ${EndIf} 
    Goto PyYAMLInstalled

    localPyYAMLInstall:
    ${If} $DEPS_OK == 1
        ExecWait "$INSTALLERDIR\deps\PyYAML-3.11.win32-py2.7.exe"
    ${EndIf}
${EndIf}
    
PyYAMLInstalled:
${If} $NEED_PYWIN32 == 1
    IfFileExists "$INSTALLERDIR\deps\pywin32-220.win32-py2.7.exe" localpywin32Install
    ${If} $DOWNLOAD_OK == 1
      inetc::get "https://www.cert.org/downloads/foe/pywin32-220.win32-py2.7.bin" "$TEMP\pywin32-220.win32-py2.7.exe"
      Pop $0
      ${If} $0 == "OK"
        ExecWait "$TEMP\pywin32-220.win32-py2.7.exe"
        Delete "$TEMP\pywin32-220.win32-py2.7.exe"
        ${Else}
            MessageBox MB_YESNO|MB_ICONEXCLAMATION "pywin32 download failed. Retry?" /SD IDNO IDYES PyYAMLInstalled
        ${EndIf} 
    ${EndIf}
    Goto pywin32Installed

    localpywin32Install:
    ${If} $DEPS_OK == 1
        ExecWait "$INSTALLERDIR\deps\pywin32-220.win32-py2.7.exe"
    ${EndIf}
${EndIf}
    
pywin32Installed:
${If} $NEED_WMI == 1
    IfFileExists "$INSTALLERDIR\deps\WMI-1.4.9.win32.exe" localWMIInstall
    ${If} $DOWNLOAD_OK == 1
      inetc::get "https://www.cert.org/downloads/foe/WMI-1.4.9.win32.bin" "$TEMP\WMI-1.4.9.win32.exe"
      Pop $0
      ${If} $0 == "OK"
        ExecWait "$TEMP\WMI-1.4.9.win32.exe"
        Delete "$TEMP\WMI-1.4.9.win32.exe"
        ${Else}
            MessageBox MB_YESNO|MB_ICONEXCLAMATION "Python WMI download failed. Retry?" /SD IDNO IDYES pywin32Installed
        ${EndIf} 
    ${EndIf}
    Goto WMIInstalled

    localWMIInstall:
    ${If} $DEPS_OK == 1
        ExecWait "$INSTALLERDIR\deps\WMI-1.4.9.win32.exe"
    ${EndIf}
${EndIf}
    
WMIInstalled:
${If} $NEED_DEBUGGER == 1
    IfFileExists "$INSTALLERDIR\deps\$DEBUGGER" localCdbInstall
    ${If} $DOWNLOAD_OK == 1
        inetc::get "https://www.cert.org/downloads/foe/$DEBUGGER" "$TEMP\$DEBUGGER"
      Pop $0
      ${If} $0 == "OK"
        ExecWait '"msiexec.exe" /i "$TEMP\$DEBUGGER" /qb ALLUSERS=1'
        Delete "$TEMP\$DEBUGGER"
        ${Else}
            MessageBox MB_YESNO|MB_ICONEXCLAMATION "Debugging Tools download failed. Retry?" /SD IDNO IDYES WMIInstalled
        ${EndIf}
    ${EndIf}
    goto cdbInstalled
    
    localCdbInstall:
    ${If} $DEPS_OK == 1
        ExecWait '"msiexec.exe" /i "$INSTALLERDIR\deps\$DEBUGGER"  /qb ALLUSERS=1'
    ${EndIf}
${EndIf}

cdbInstalled:


${If} $NEED_VC2010 == 1
  IfFileExists "$INSTALLERDIR\deps\$VCR.exe" localVCRInstall
  ${If} $DOWNLOAD_OK == 1
    inetc::get "https://www.cert.org/downloads/foe/$VCR.bin" "$TEMP\$VCR.exe"
    Pop $0
    ${If} $0 == "OK"
      ExecWait "$TEMP\$VCR.exe /passive /norestart"
      Delete "$TEMP\$VCR.exe"
    ${Else}
      MessageBox MB_YESNO|MB_ICONEXCLAMATION "Visual C++ 2010 Runtime download failed. Retry?" /SD IDNO IDYES cdbInstalled
    ${EndIf} 
  ${EndIf}
  Goto VCRInstalled

  localVCRInstall:
    ${If} $DEPS_OK == 1
      ExecWait "$INSTALLERDIR\deps\$VCR.exe /passive /norestart"
    ${EndIf}
${EndIf}

VCRInstalled:

#IfFileExists "$DEBUGDIR\winext\msec.dll" msecInstalled
    ${If} $WIN64 == 1
        # 64-bit Windows
        CopyFiles "$INSTDIR\msec\x64\*.dll" "$DEBUGDIR\winext"
    ${Else}
        # 32-bit Windows
        CopyFiles "$INSTDIR\msec\*.dll" "$DEBUGDIR\winext"
    ${EndIf}

#msecInstalled:

IfFileExists "$INSTDIR\configs\bff.yaml" configCopied

CopyFiles "$INSTDIR\configs\examples\bff.yaml" "$INSTDIR\configs\bff.yaml"

StrCpy $FUZZ_IMAGEMAGICK "Y"

configCopied:
${EnvVarUpdate} $0 "PATH" "A" "HKLM" "$DEBUGDIR"

#ReadEnvStr $SYMBOL_ENV _NT_SYMBOL_PATH
#MessageBox MB_OK "SYMBOL_ENV: '$SYMBOL_ENV'"

#${If} $SYMBOL_ENV == ""
#   MessageBox MB_OK "Symbol server not configured"
#   ${EnvVarUpdate} $0 "_NT_SYMBOL_PATH" "A" "HKLM" "symsrv*symsrv.dll*$INSTDIR\symbols*http://msdl.microsoft.com/download/symbols"
#${EndIf}

WriteRegStr HKLM "SOFTWARE\ImageMagick\5.5.7\Q:16" BinPath "$INSTDIR\imagemagick"
WriteRegStr HKLM "SOFTWARE\ImageMagick\5.5.7\Q:16" ConfigurePath "$INSTDIR\imagemagick\config"
WriteRegStr HKLM "SOFTWARE\ImageMagick\5.5.7\Q:16" LibPath "$INSTDIR\imagemagick"

#${If} $FUZZ_IMAGEMAGICK == "Y"
    CreateDirectory "$INSTDIR\results\convert_v5.5.7"
#${EndIf}

SectionEnd

######################################################################

Section -Icons_Reg
SetOutPath "$INSTDIR"
WriteUninstaller "$INSTDIR\uninstall.exe"


!ifdef REG_START_MENU
!insertmacro MUI_STARTMENU_WRITE_BEGIN Application
CreateDirectory "$SMPROGRAMS\$SM_Folder"
CreateShortCut "$SMPROGRAMS\$SM_Folder\${APP_NAME}.lnk" "${MAIN_APP_EXE}" " /k echo Edit configs\bff.yaml and run bff.py to start fuzzing & echo See readme.txt for documentation & bff.py -h"
CreateShortCut "$SMPROGRAMS\$SM_Folder\README.lnk" "$INSTDIR\readme.txt"
!ifdef WEB_SITE
WriteIniStr "$INSTDIR\CERT website.url" "InternetShortcut" "URL" "${WEB_SITE}"
CreateShortCut "$SMPROGRAMS\$SM_Folder\CERT Website.lnk" "$INSTDIR\CERT website.url"
!endif
!insertmacro MUI_STARTMENU_WRITE_END
!endif

!ifndef REG_START_MENU
CreateDirectory "$SMPROGRAMS\BFF"
CreateShortCut "$SMPROGRAMS\BFF\${APP_NAME}.lnk" "${MAIN_APP_EXE}  /k echo Edit configs\bff.yaml and run bff.py to start fuzzing & echo See readme.txt for documentation & bff.py -h"
CreateShortCut "$SMPROGRAMS\BFF\README.lnk" "$INSTDIR\readme.txt"
!ifdef WEB_SITE
WriteIniStr "$INSTDIR\CERT website.url" "InternetShortcut" "URL" "${WEB_SITE}"
CreateShortCut "$SMPROGRAMS\BFF\CERT Website.lnk" "$INSTDIR\CERT website.url"
!endif
!endif

#WriteRegStr ${REG_ROOT} "${REG_APP_PATH}" "" "$INSTDIR\${MAIN_APP_EXE}"
WriteRegStr ${REG_ROOT} "${UNINSTALL_PATH}"  "DisplayName" "${APP_NAME}"
WriteRegStr ${REG_ROOT} "${UNINSTALL_PATH}"  "UninstallString" "$INSTDIR\uninstall.exe"
#WriteRegStr ${REG_ROOT} "${UNINSTALL_PATH}"  "DisplayIcon" "$INSTDIR\${MAIN_APP_EXE}"
WriteRegStr ${REG_ROOT} "${UNINSTALL_PATH}"  "DisplayVersion" "${VERSION}"
WriteRegStr ${REG_ROOT} "${UNINSTALL_PATH}"  "Publisher" "${COMP_NAME}"

!ifdef WEB_SITE
WriteRegStr ${REG_ROOT} "${UNINSTALL_PATH}"  "URLInfoAbout" "${WEB_SITE}"
!endif
SectionEnd

######################################################################

Section Uninstall
${INSTALL_TYPE}
